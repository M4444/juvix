---
environment: {GIT_LFS_SKIP_SMUDGE: '1', STACK_ROOT: /drone/workspace/.stack}
kind: pipeline
name: juvix-ci-build-pr
node: {project: juvix}
steps:
- commands: [echo "49db3ec988197ca77f7384b1b1ae2e45266943d7ff54e0dcd21fb515d298461d  Makefile"
      | sha256sum -c -, echo "3316642c7c435c6d2000e9cd2896c1413e456e9290cffebece8c588cac96e638  scripts/push-changes.sh"
      | sha256sum -c -, echo "d04e32c725b9316805e85d2e8d26d9aaa7010f00e98cd933e4a16c64c0533a6f  scripts/format-and-org-gen.sh"
      | sha256sum -c -, echo "b6ad65e92d1f6f47516586281d55b27794f3bc368d06473781925397f27e7932  scripts/check-formatting.sh"
      | sha256sum -c -, echo "bc61d2cdaf46935ff2ebb2e85cbfdc106629b5d8c8589dfb5dbdc171c2ecfe92  scripts/check-org-gen.sh"
      | sha256sum -c -, echo "59e7ec32dc65c1668ca90cb0b825f4d86215cd2b1382babeabaedde8d6d61347  scripts/pre-run.sh"
      | sha256sum -c -, echo "9a6e36300c3620e23f0bb3faf488b87aca323d9730302b6f0f4bdc3b672bf036  scripts/build-and-publish-docs.sh"
      | sha256sum -c -, echo "c0ca1a8cc30da0759ed2baf0ce6e596c27b01be51ac1beeaa6754e95c6725093  scripts/generate-checksums.py"
      | sha256sum -c -, sh scripts/pre-run.sh]
  image: alpine/git:v2.30.1
  name: check-scripts-integrity
  pull: never
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: meltwater/drone-cache:latest
  name: restore-cache
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/{{ checksum "stack.yaml" }}
    mount: [./.stack-work, ./.stack]
    region: eu-west-1
    restore: true
- commands: [make stack-yaml, make update-local-stdlibs, make test]
  depends_on: [restore-cache]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-suite
  pull: never
- commands: [make test-parser]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-parser
  pull: never
- commands: [make test-typecheck]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-typecheck
  pull: never
- commands: [make test-compile]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-compile
  pull: never
- commands: [sh ./scripts/format-and-org-gen.sh]
  depends_on: [test-typecheck, test-compile, test-parser]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: org-generation-and-code-formatting
  pull: never
- commands: [python3 scripts/generate-checksums.py]
  depends_on: [test-typecheck, test-compile, test-parser]
  environment:
    GITHUB_TOKEN: {from_secret: github_token}
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/git:latest
  name: build-checksums
  pull: never
- commands: [sh ./scripts/push-changes.sh]
  depends_on: [org-generation-and-code-formatting, build-checksums]
  environment:
    GITHUB_TOKEN: {from_secret: github_token}
  image: openanalytics/alpine-git-lfs-client
  name: push-changes
  pull: never
- depends_on: [push-changes]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/{{ checksum "stack.yaml" }}
    mount: [./.stack-work, ./.stack]
    override: false
    rebuild: true
    region: eu-west-1
  when:
    status: [success, failure]
trigger:
  event: [pull_request]
type: docker
workspace: {path: /drone/workspace}
---
environment: {GIT_LFS_SKIP_SMUDGE: '1', STACK_ROOT: /juvix/workspace/.stack}
kind: pipeline
name: juvix-ci-build-push-develop
node: {project: juvix}
steps:
- commands: [echo "49db3ec988197ca77f7384b1b1ae2e45266943d7ff54e0dcd21fb515d298461d  Makefile"
      | sha256sum -c -, echo "3316642c7c435c6d2000e9cd2896c1413e456e9290cffebece8c588cac96e638  scripts/push-changes.sh"
      | sha256sum -c -, echo "d04e32c725b9316805e85d2e8d26d9aaa7010f00e98cd933e4a16c64c0533a6f  scripts/format-and-org-gen.sh"
      | sha256sum -c -, echo "b6ad65e92d1f6f47516586281d55b27794f3bc368d06473781925397f27e7932  scripts/check-formatting.sh"
      | sha256sum -c -, echo "bc61d2cdaf46935ff2ebb2e85cbfdc106629b5d8c8589dfb5dbdc171c2ecfe92  scripts/check-org-gen.sh"
      | sha256sum -c -, echo "59e7ec32dc65c1668ca90cb0b825f4d86215cd2b1382babeabaedde8d6d61347  scripts/pre-run.sh"
      | sha256sum -c -, echo "9a6e36300c3620e23f0bb3faf488b87aca323d9730302b6f0f4bdc3b672bf036  scripts/build-and-publish-docs.sh"
      | sha256sum -c -, echo "c0ca1a8cc30da0759ed2baf0ce6e596c27b01be51ac1beeaa6754e95c6725093  scripts/generate-checksums.py"
      | sha256sum -c -, sh scripts/pre-run.sh]
  image: alpine/git:v2.30.1
  name: check-scripts-integrity
  pull: never
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: meltwater/drone-cache:latest
  name: restore-cache
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/{{ checksum "stack.yaml" }}
    mount: [./.stack-work, ./.stack]
    region: eu-west-1
    restore: true
- commands: [make stack-yaml, make update-local-stdlibs, make test]
  depends_on: [restore-cache]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-suite
  pull: never
- commands: [make test-parser]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-parser
  pull: never
- commands: [make test-typecheck]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-typecheck
  pull: never
- commands: [make test-compile]
  depends_on: [test-suite]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: test-compile
  pull: never
- depends_on: [test-compile, test-typecheck, test-parser]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/{{ checksum "stack.yaml" }}
    mount: [./.stack-work, ./.stack]
    override: false
    rebuild: true
    region: eu-west-1
  when:
    status: [success, failure]
trigger:
  branch: [develop]
  event: [push]
type: docker
workspace: {path: /juvix/workspace}
---
environment: {GIT_LFS_SKIP_SMUDGE: '1', STACK_ROOT: /juvix/docs/.stack}
kind: pipeline
name: juvix-ci-docs-pr-push-develop
node: {project: juvix}
steps:
- commands: [echo "49db3ec988197ca77f7384b1b1ae2e45266943d7ff54e0dcd21fb515d298461d  Makefile"
      | sha256sum -c -, echo "3316642c7c435c6d2000e9cd2896c1413e456e9290cffebece8c588cac96e638  scripts/push-changes.sh"
      | sha256sum -c -, echo "d04e32c725b9316805e85d2e8d26d9aaa7010f00e98cd933e4a16c64c0533a6f  scripts/format-and-org-gen.sh"
      | sha256sum -c -, echo "b6ad65e92d1f6f47516586281d55b27794f3bc368d06473781925397f27e7932  scripts/check-formatting.sh"
      | sha256sum -c -, echo "bc61d2cdaf46935ff2ebb2e85cbfdc106629b5d8c8589dfb5dbdc171c2ecfe92  scripts/check-org-gen.sh"
      | sha256sum -c -, echo "59e7ec32dc65c1668ca90cb0b825f4d86215cd2b1382babeabaedde8d6d61347  scripts/pre-run.sh"
      | sha256sum -c -, echo "9a6e36300c3620e23f0bb3faf488b87aca323d9730302b6f0f4bdc3b672bf036  scripts/build-and-publish-docs.sh"
      | sha256sum -c -, echo "c0ca1a8cc30da0759ed2baf0ce6e596c27b01be51ac1beeaa6754e95c6725093  scripts/generate-checksums.py"
      | sha256sum -c -, sh scripts/pre-run.sh]
  image: alpine/git:v2.30.1
  name: check-scripts-integrity
  pull: never
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-stack
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "stack.yaml" }}
    mount: [./.stack]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-plonk
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/Plonk/stack.yaml" }}
    mount: [library/Backends/Plonk/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-michelson
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/Michelson/stack.yaml" }}
    mount: [library/Backends/Michelson/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-parsing
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Parsing/stack.yaml" }}
    mount: [library/Parsing/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-core
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Core/stack.yaml" }}
    mount: [library/Core/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-standard-library
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/StandardLibrary/stack.yaml" }}
    mount: [library/StandardLibrary/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-witch
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Witch/stack.yaml" }}
    mount: [library/Witch/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-context
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Context/stack.yaml" }}
    mount: [library/Context/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-sexp
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Sexp/stack.yaml" }}
    mount: [library/Sexp/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-translate
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Translate/stack.yaml" }}
    mount: [library/Translate/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-http
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Playground/HTTP/stack.yaml" }}
    mount: [library/Playground/HTTP/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-easy
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Playground/Easy/stack.yaml" }}
    mount: [library/Playground/Easy/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: restore-cache-data-structure
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Test/DataStructures/stack.yaml" }}
    mount: [library/Test/DataStructures/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 16m
  image: meltwater/drone-cache:latest
  name: restore-cache-llvm
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/llvm/stack.yaml" }}
    mount: [library/Backends/llvm/.stack-work]
    override: false
    rebuild: false
    region: eu-west-1
    restore: true
  when:
    status: [success, failure]
- commands: [./scripts/build-and-publish-docs.sh]
  depends_on: [restore-cache-stack, restore-cache-context, restore-cache-core, restore-cache-data-structure,
    restore-cache-easy, restore-cache-parsing, restore-cache-http, restore-cache-llvm,
    restore-cache-michelson, restore-cache-plonk, restore-cache-sexp, restore-cache-standard-library,
    restore-cache-translate, restore-cache-witch]
  environment:
    GITHUB_TOKEN: {from_secret: github_token}
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/juvix:latest
  name: build-docs
  pull: never
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-stack
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "stack.yaml" }}
    mount: [./.stack]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-plonk
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/Plonk/stack.yaml" }}
    mount: [library/Backends/Plonk/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success, failure]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-michelson
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/Michelson/stack.yaml" }}
    mount: [library/Backends/Michelson/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-parsing
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Parsing/stack.yaml" }}
    mount: [library/Parsing/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-core
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Core/stack.yaml" }}
    mount: [library/Core/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-standard-library
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/StandardLibrary/stack.yaml" }}
    mount: [library/StandardLibrary/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-witch
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Witch/stack.yaml" }}
    mount: [library/Witch/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-context
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Context/stack.yaml" }}
    mount: [library/Context/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-sexp
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Sexp/stack.yaml" }}
    mount: [library/Sexp/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-translate
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Translate/stack.yaml" }}
    mount: [library/Translate/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-http
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Playground/HTTP/stack.yaml" }}
    mount: [library/Playground/HTTP/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-easy
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Playground/Easy/stack.yaml" }}
    mount: [library/Playground/Easy/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 8m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-data-structure
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Test/DataStructures/stack.yaml" }}
    mount: [library/Test/DataStructures/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
- depends_on: [build-docs]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    BACKEND_OPERATION_TIMEOUT: 16m
  image: meltwater/drone-cache:latest
  name: rebuild-cache-llvm
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/docs/{{ checksum "library/Backends/llvm/stack.yaml" }}
    mount: [library/Backends/llvm/.stack-work]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success]
trigger:
  branch: [develop]
  event: [push, pull_request]
type: docker
workspace: {path: /juvix/docs}
---
environment: {GIT_LFS_SKIP_SMUDGE: '1', STACK_ROOT: /juvix/workspace/.stack}
kind: pipeline
name: juvix-ci-update-artifacts-push-develop
node: {project: juvix}
steps:
- commands: [echo "49db3ec988197ca77f7384b1b1ae2e45266943d7ff54e0dcd21fb515d298461d  Makefile"
      | sha256sum -c -, echo "3316642c7c435c6d2000e9cd2896c1413e456e9290cffebece8c588cac96e638  scripts/push-changes.sh"
      | sha256sum -c -, echo "d04e32c725b9316805e85d2e8d26d9aaa7010f00e98cd933e4a16c64c0533a6f  scripts/format-and-org-gen.sh"
      | sha256sum -c -, echo "b6ad65e92d1f6f47516586281d55b27794f3bc368d06473781925397f27e7932  scripts/check-formatting.sh"
      | sha256sum -c -, echo "bc61d2cdaf46935ff2ebb2e85cbfdc106629b5d8c8589dfb5dbdc171c2ecfe92  scripts/check-org-gen.sh"
      | sha256sum -c -, echo "59e7ec32dc65c1668ca90cb0b825f4d86215cd2b1382babeabaedde8d6d61347  scripts/pre-run.sh"
      | sha256sum -c -, echo "9a6e36300c3620e23f0bb3faf488b87aca323d9730302b6f0f4bdc3b672bf036  scripts/build-and-publish-docs.sh"
      | sha256sum -c -, echo "c0ca1a8cc30da0759ed2baf0ce6e596c27b01be51ac1beeaa6754e95c6725093  scripts/generate-checksums.py"
      | sha256sum -c -, sh scripts/pre-run.sh]
  image: alpine/git:v2.30.1
  name: check-scripts-integrity
  pull: never
- commands: ['aws s3 sync stdlib s3://heliax-juvix-artifacts-v1 --acl public-read
      --exclude "*" --include "*.json" --include "*/*.ju" --include "*.ju"']
  depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/git:latest
  name: upload-artifacts
  pull: never
trigger:
  branch: [develop]
  event: [push]
type: docker
workspace: {path: /juvix/workspace}
---
environment: {GIT_LFS_SKIP_SMUDGE: '1', STACK_ROOT: /juvix/web/.stack}
kind: pipeline
name: juvix-ci-deploy-website
node: {project: juvix}
steps:
- commands: [echo "49db3ec988197ca77f7384b1b1ae2e45266943d7ff54e0dcd21fb515d298461d  Makefile"
      | sha256sum -c -, echo "3316642c7c435c6d2000e9cd2896c1413e456e9290cffebece8c588cac96e638  scripts/push-changes.sh"
      | sha256sum -c -, echo "d04e32c725b9316805e85d2e8d26d9aaa7010f00e98cd933e4a16c64c0533a6f  scripts/format-and-org-gen.sh"
      | sha256sum -c -, echo "b6ad65e92d1f6f47516586281d55b27794f3bc368d06473781925397f27e7932  scripts/check-formatting.sh"
      | sha256sum -c -, echo "bc61d2cdaf46935ff2ebb2e85cbfdc106629b5d8c8589dfb5dbdc171c2ecfe92  scripts/check-org-gen.sh"
      | sha256sum -c -, echo "59e7ec32dc65c1668ca90cb0b825f4d86215cd2b1382babeabaedde8d6d61347  scripts/pre-run.sh"
      | sha256sum -c -, echo "9a6e36300c3620e23f0bb3faf488b87aca323d9730302b6f0f4bdc3b672bf036  scripts/build-and-publish-docs.sh"
      | sha256sum -c -, echo "c0ca1a8cc30da0759ed2baf0ce6e596c27b01be51ac1beeaa6754e95c6725093  scripts/generate-checksums.py"
      | sha256sum -c -, sh scripts/pre-run.sh]
  image: alpine/git:v2.30.1
  name: check-scripts-integrity
  pull: never
- depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: meltwater/drone-cache:latest
  name: restore-cache-frontend
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/frontend/{{ checksum "library/Playground/HTTP/compiler-debugger/package-lock.json"
      }}
    mount: [./library/Playground/HTTP/compiler-debugger/node_modules]
    region: eu-west-1
    restore: true
- commands: [cd library/Playground/HTTP/compiler-debugger && npm install && CI=false
      npm run build]
  depends_on: [restore-cache-frontend]
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/node:14.18.2-stretch
  name: build-frontend
  pull: never
- commands: [mkdir $AWS_FOLDER && touch $AWS_CREDENTIALS_FILE && touch $AWS_CONFIG_FILE,
    'echo "[default]" > $AWS_CREDENTIALS_FILE', 'echo aws_access_key_id=${AWS_ACCESS_KEY_ID}
      >> $AWS_CREDENTIALS_FILE', 'echo aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
      >> $AWS_CREDENTIALS_FILE', 'echo "[default]" > $AWS_CONFIG_FILE', echo "region
      = eu-west-1" >> $AWS_CONFIG_FILE, mkdir /run/, echo $NIX_CACHE_KEY > /run/nix-cache-key.pem,
    'nix build .#x86_64-unknown-linux-musl:http:exe:juvix-server --option allow-import-from-derivation
      true']
  depends_on: [check-scripts-integrity]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_CONFIG_FILE: /root/.aws/config
    AWS_CREDENTIALS_FILE: /root/.aws/credentials
    AWS_FOLDER: /root/.aws
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
    NIX_CACHE_BUCKET: heliaxdev-nixcache?region=eu-west-1
    NIX_CACHE_KEY: {from_secret: nix_cache_key}
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/nix:latest
  name: build-backend
  pull: never
- depends_on: [build-backend]
  image: appleboy/drone-scp
  name: deploy-backend
  pull: never
  settings:
    host: juvix-api.heliax.dev
    key: {from_secret: ssh_key}
    source: /root/result/bin/juvix-server
    target: /home/ubuntu
    username: ubuntu
- commands: ['aws s3 sync library/Playground/HTTP/compiler-debugger/build s3://juvix.heliax.dev
      --delete --region eu-west-1', aws cloudfront create-invalidation --distribution-id
      E2JJLE9WAN786S --paths "/" --region eu-west-1]
  depends_on: [build-frontend]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: 965844283396.dkr.ecr.eu-west-1.amazonaws.com/git:latest
  name: deploy-frontend
  pull: never
- depends_on: [deploy-backend]
  image: appleboy/drone-ssh
  name: reload-backend
  pull: never
  settings:
    host: juvix-api.heliax.dev
    key: {from_secret: ssh_key}
    script: [/home/ubuntu/start.sh]
    username: ubuntu
- depends_on: [deploy-frontend]
  environment:
    AWS_ACCESS_KEY_ID: {from_secret: aws_access_key_id}
    AWS_SECRET_ACCESS_KEY: {from_secret: aws_secret_access_key}
  image: meltwater/drone-cache:latest
  name: rebuild-cache-frontend
  pull: never
  settings:
    archive_format: gzip
    backend: s3
    bucket: heliax-drone-cache-v2
    cache_key: juvix/frontend/{{ checksum "library/Playground/HTTP/compiler-debugger/package-lock.json"
      }}
    mount: [./library/Playground/HTTP/compiler-debugger/node_modules]
    override: false
    rebuild: true
    region: eu-west-1
    restore: false
  when:
    status: [success, failure]
trigger:
  branch: [develop]
  event: [push, pull_request]
type: docker
workspace: {path: /juvix/web}
---
kind: signature
hmac: b55e4acf3c0c2a1c5ceccc643249f86c9ac78397d9fe48c142f05d7ef5550fbf

...
