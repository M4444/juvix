mod LLVM.Data.Int where

open Prelude
open LLVM.Data

sig int : ty
let int = Int8.int8

sig add : int -> int -> int
let add = %LLVM.add

sig (+) : int -> int -> int
let (+) = %LLVM.add
declare infixl (+) 5

sig sub : int -> int -> int
let sub = %LLVM.sub

sig (-) : int -> int -> int
let (-) = %LLVM.sub
declare infixl (-) 5

sig mul : int -> int -> int
let mul = %LLVM.mul

sig (*) : int -> int -> int
let (*) = %LLVM.mul
declare infixl (*) 7

-- sig (==) : int -> int -> bool
-- let (==) = %LLVM.eq
-- declare infixl (==) 4
