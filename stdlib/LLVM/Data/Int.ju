mod LLVM.Data.Int where

open Prelude
open LLVM.Data

sig t : ty
let t = T8.t8

sig add : t -> t -> t
let add = %LLVM.add

sig (+) : t -> t -> t
let (+) = %LLVM.add
declare infixl (+) 5

sig sub : t -> t -> t
let sub = %LLVM.sub

sig (-) : t -> t -> t
let (-) = %LLVM.sub
declare infixl (-) 5

sig mul : t -> t -> t
let mul = %LLVM.mul

sig (*) : t -> t -> t
let (*) = %LLVM.mul
declare infixl (*) 7

-- sig (==) : t -> t -> bool
-- let (==) = %LLVM.eq
-- declare infixl (==) 4
