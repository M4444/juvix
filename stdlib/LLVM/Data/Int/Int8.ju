mod LLVM.Data.Int.Int8 where

open Prelude

sig int8 : ty
let int8 = %LLVM.int8

sig add : int8 -> int8 -> int8
let add = %LLVM.add

sig (+) : int8 -> int8 -> int8
let (+) = %LLVM.add
declare infixl (+) 5

sig sub : int8 -> int8 -> int8
let sub = %LLVM.sub

sig (-) : int8 -> int8 -> int8
let (-) = %LLVM.sub
declare infixl (-) 5

sig mul : int8 -> int8 -> int8
let mul = %LLVM.mul

sig (*) : int8 -> int8 -> int8
let (*) = %LLVM.mul
declare infixl (*) 7

-- sig (==) : int8 -> int8 -> bool
-- let (==) = %LLVM.eq
-- declare infixl (==) 4