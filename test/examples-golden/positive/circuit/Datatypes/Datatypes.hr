fromList
    [
        ( "Datatypes" :| [ "VerySimpleType" ]
        , RawGDatatype
            ( RawDatatype
                { rawDataName = "Datatypes" :| [ "VerySimpleType" ]
                , rawDataPos = []
                , rawDataArgs = []
                , rawDataLevel = 0
                , rawDataCons =
                    [ RawDataCon
                        { rawConName = "Datatypes" :| [ "One" ]
                        , rawConType = Pi Omega
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "field" ] )
                                ) ()
                            )
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "VerySimpleType" ] )
                                ) ()
                            )
                            ( "" :| [] )
                        , rawConDef = Nothing
                        }
                    ]
                }
            )
        )
    ,
        ( "Datatypes" :| [ "One" ]
        , RawGDataCon
            ( RawDataCon
                { rawConName = "Datatypes" :| [ "One" ]
                , rawConType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "VerySimpleType" ] )
                        ) ()
                    )
                    ( "" :| [] )
                , rawConDef = Nothing
                }
            )
        )
    ,
        ( "Datatypes" :| [ "+" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "+" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim PAdd ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "patternMatch" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "patternMatch" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "Bar" ] )
                        ) ()
                    )
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats =
                        [ PCon
                            ( "P" :| [] )
                            [ PatternX
                                ( "x" :| [] )
                            , PatternX
                                ( "y" :| [] )
                            ] ()
                        ]
                    , rawClauseBody = Elim
                        ( App
                            ( App
                                ( ElimX
                                    ( "Datatypes" :| [ "+" ] )
                                )
                                ( Elim
                                    ( App
                                        ( App
                                            ( ElimX
                                                ( "Datatypes" :| [ "^" ] )
                                            )
                                            ( Elim
                                                ( ElimX
                                                    ( "Datatypes" :| [ "x" ] )
                                                ) ()
                                            ) ()
                                        )
                                        ( Prim
                                            ( PConst
                                                ( P
                                                    ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                )
                                            ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            )
                            ( Elim
                                ( App
                                    ( App
                                        ( ElimX
                                            ( "Datatypes" :| [ "^" ] )
                                        )
                                        ( Elim
                                            ( ElimX
                                                ( "y" :| [] )
                                            ) ()
                                        ) ()
                                    )
                                    ( Prim
                                        ( PConst
                                            ( P
                                                ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                            )
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        ) ()
                    , rawClauseCatchall = False
                    } :|
                    [ RawFunClause
                        { rawClauseTel = []
                        , rawClausePats =
                            [ PCon
                                ( "Q" :| [] )
                                [ PatternX
                                    ( "x" :| [] )
                                , PatternX
                                    ( "y" :| [] )
                                , PatternX
                                    ( "z" :| [] )
                                ] ()
                            ]
                        , rawClauseBody = Elim
                            ( App
                                ( App
                                    ( ElimX
                                        ( "Datatypes" :| [ "+" ] )
                                    )
                                    ( Elim
                                        ( App
                                            ( App
                                                ( ElimX
                                                    ( "Datatypes" :| [ "^" ] )
                                                )
                                                ( Elim
                                                    ( ElimX
                                                        ( "Datatypes" :| [ "x" ] )
                                                    ) ()
                                                ) ()
                                            )
                                            ( Prim
                                                ( PConst
                                                    ( P
                                                        ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                    )
                                                ) ()
                                            ) ()
                                        ) ()
                                    ) ()
                                )
                                ( Elim
                                    ( App
                                        ( App
                                            ( ElimX
                                                ( "Datatypes" :| [ "+" ] )
                                            )
                                            ( Elim
                                                ( App
                                                    ( App
                                                        ( ElimX
                                                            ( "Datatypes" :| [ "^" ] )
                                                        )
                                                        ( Elim
                                                            ( ElimX
                                                                ( "y" :| [] )
                                                            ) ()
                                                        ) ()
                                                    )
                                                    ( Prim
                                                        ( PConst
                                                            ( P
                                                                ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                            )
                                                        ) ()
                                                    ) ()
                                                ) ()
                                            ) ()
                                        )
                                        ( Elim
                                            ( App
                                                ( App
                                                    ( ElimX
                                                        ( "Datatypes" :| [ "^" ] )
                                                    )
                                                    ( Elim
                                                        ( ElimX
                                                            ( "z" :| [] )
                                                        ) ()
                                                    ) ()
                                                )
                                                ( Prim
                                                    ( PConst
                                                        ( P
                                                            ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                        )
                                                    ) ()
                                                ) ()
                                            ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        , rawClauseCatchall = False
                        }
                    ]
                }
            )
        )
    ,
        ( "Datatypes" :| [ "P" ]
        , RawGDataCon
            ( RawDataCon
                { rawConName = "Datatypes" :| [ "P" ]
                , rawConType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "Bar" ] )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawConDef = Nothing
                }
            )
        )
    ,
        ( "Datatypes" :| [ "verySimpleTerm" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "verySimpleTerm" ]
                , rawFunUsage = GOmega
                , rawFunType = Elim
                    ( ElimX
                        ( "Datatypes" :| [ "VerySimpleType" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Elim
                        ( App
                            ( ElimX
                                ( "Datatypes" :| [ "One" ] )
                            )
                            ( Prim
                                ( PConst
                                    ( P
                                        ( 0 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                    )
                                ) ()
                            ) ()
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "==" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "==" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "Circuit"
                                    , "bool"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim PEq ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "Bar" ]
        , RawGDatatype
            ( RawDatatype
                { rawDataName = "Datatypes" :| [ "Bar" ]
                , rawDataPos = []
                , rawDataArgs = []
                , rawDataLevel = 0
                , rawDataCons =
                    [ RawDataCon
                        { rawConName = "Datatypes" :| [ "P" ]
                        , rawConType = Pi Omega
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "field" ] )
                                ) ()
                            )
                            ( Pi Omega
                                ( Elim
                                    ( ElimX
                                        ( "Datatypes" :| [ "field" ] )
                                    ) ()
                                )
                                ( Elim
                                    ( ElimX
                                        ( "Datatypes" :| [ "Bar" ] )
                                    ) ()
                                )
                                ( "" :| [] )
                            )
                            ( "" :| [] )
                        , rawConDef = Nothing
                        }
                    , RawDataCon
                        { rawConName = "Datatypes" :| [ "Q" ]
                        , rawConType = Pi Omega
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "field" ] )
                                ) ()
                            )
                            ( Pi Omega
                                ( Elim
                                    ( ElimX
                                        ( "Datatypes" :| [ "field" ] )
                                    ) ()
                                )
                                ( Pi Omega
                                    ( Elim
                                        ( ElimX
                                            ( "Datatypes" :| [ "field" ] )
                                        ) ()
                                    )
                                    ( Elim
                                        ( ElimX
                                            ( "Datatypes" :| [ "Bar" ] )
                                        ) ()
                                    )
                                    ( "" :| [] )
                                )
                                ( "" :| [] )
                            )
                            ( "" :| [] )
                        , rawConDef = Nothing
                        }
                    ]
                }
            )
        )
    ,
        ( "Datatypes" :| [ "^" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "^" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim PExp ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "field" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "field" ]
                , rawFunUsage = GOmega
                , rawFunType = Elim
                    ( ElimX
                        ( "Prelude" :| [ "ty" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = PrimTy PField ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "*" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "*" ]
                , rawFunUsage = GOmega
                , rawFunType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim PMul ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "main" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "main" ]
                , rawFunUsage = GOmega
                , rawFunType = Elim
                    ( ElimX
                        ( "Datatypes" :| [ "field" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Let Omega
                        ( ElimX
                            ( "Datatypes" :| [ "verySimpleTerm" ] )
                        )
                        ( Let Omega
                            ( App
                                ( ElimX
                                    ( "Datatypes" :| [ "patternMatch" ] )
                                )
                                ( Elim
                                    ( App
                                        ( App
                                            ( App
                                                ( ElimX
                                                    ( "Datatypes" :| [ "Q" ] )
                                                )
                                                ( Prim
                                                    ( PConst
                                                        ( P
                                                            ( 0 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                        )
                                                    ) ()
                                                ) ()
                                            )
                                            ( Prim
                                                ( PConst
                                                    ( P
                                                        ( 1 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                    )
                                                ) ()
                                            ) ()
                                        )
                                        ( Prim
                                            ( PConst
                                                ( P
                                                    ( 2 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                                )
                                            ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            )
                            ( Prim
                                ( PConst
                                    ( P
                                        ( 3 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                    )
                                ) ()
                            )
                            ( "pm" :| [] )
                        )
                        ( "vst" :| [] )
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "x" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Datatypes" :| [ "x" ]
                , rawFunUsage = GOmega
                , rawFunType = Elim
                    ( ElimX
                        ( "Datatypes" :| [ "field" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim
                        ( PConst
                            ( P
                                ( 3 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                            )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Datatypes" :| [ "Q" ]
        , RawGDataCon
            ( RawDataCon
                { rawConName = "Datatypes" :| [ "Q" ]
                , rawConType = Pi Omega
                    ( Elim
                        ( ElimX
                            ( "Datatypes" :| [ "field" ] )
                        ) ()
                    )
                    ( Pi Omega
                        ( Elim
                            ( ElimX
                                ( "Datatypes" :| [ "field" ] )
                            ) ()
                        )
                        ( Pi Omega
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "field" ] )
                                ) ()
                            )
                            ( Elim
                                ( ElimX
                                    ( "Datatypes" :| [ "Bar" ] )
                                ) ()
                            )
                            ( "" :| [] )
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawConDef = Nothing
                }
            )
        )
    ]