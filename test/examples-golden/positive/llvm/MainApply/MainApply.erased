Ann
    { usage = SAny
    , type' = PrimTy
        ( PrimTy
            ( IntegerType
                { typeBits = 8 }
            )
        )
    , term = AppM
        ( Ann
            { usage = SAny
            , type' = Pi SAny
                ( PrimTy
                    ( PrimTy
                        ( IntegerType
                            { typeBits = 8 }
                        )
                    )
                )
                ( Pi SAny
                    ( PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        )
                    )
                    ( PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        )
                    )
                )
            , term = LamM
                { capture = []
                , arguments =
                    [ "0" :| []
                    , "1" :| []
                    ]
                , body = Ann
                    { usage = SAny
                    , type' = PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        )
                    , term = Var
                        ( "0" :| [] )
                    }
                }
            }
        )
        [ Ann
            { usage = SAny
            , type' = PrimTy
                ( PrimTy
                    ( IntegerType
                        { typeBits = 8 }
                    )
                )
            , term = Prim
                ( Return
                    { retType = PrimType
                        { getPrimType = PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            ) :| []
                        }
                    , retTerm = LitInt 10
                    }
                )
            }
        , Ann
            { usage = SAny
            , type' = PrimTy
                ( PrimTy
                    ( IntegerType
                        { typeBits = 8 }
                    )
                )
            , term = Prim
                ( Return
                    { retType = PrimType
                        { getPrimType = PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            ) :| []
                        }
                    , retTerm = LitInt 20
                    }
                )
            }
        ]
    }