fromList
    [
        ( "Prelude" :|
            [ "LLVM"
            , "int8"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "int8"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Elim
                    ( ElimX
                        ( "Prelude" :| [ "ty" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 8 }
                            )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "add"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "add"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Add ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "*"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "*"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Mul ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "int16"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "int16"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Elim
                    ( ElimX
                        ( "Prelude" :| [ "ty" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = PrimTy
                        ( PrimTy
                            ( IntegerType
                                { typeBits = 16 }
                            )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Nested" :| [ "main" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Nested" :| [ "main" ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Pi SAny
                            ( Elim
                                ( ElimX
                                    ( "Prelude" :|
                                        [ "LLVM"
                                        , "int"
                                        ]
                                    )
                                ) ()
                            )
                            ( Elim
                                ( ElimX
                                    ( "Prelude" :|
                                        [ "LLVM"
                                        , "int"
                                        ]
                                    )
                                ) ()
                            )
                            ( "" :| [] )
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats =
                        [ PatternX
                            ( "x" :| [] )
                        , PatternX
                            ( "y" :| [] )
                        , PatternX
                            ( "z" :| [] )
                        ]
                    , rawClauseBody = Elim
                        ( App
                            ( App
                                ( ElimX
                                    ( "Prelude" :|
                                        [ "LLVM"
                                        , "Int"
                                        , "+"
                                        ]
                                    )
                                )
                                ( Elim
                                    ( App
                                        ( App
                                            ( ElimX
                                                ( "Prelude" :|
                                                    [ "LLVM"
                                                    , "Int"
                                                    , "*"
                                                    ]
                                                )
                                            )
                                            ( Elim
                                                ( ElimX
                                                    ( "x" :| [] )
                                                ) ()
                                            ) ()
                                        )
                                        ( Prim
                                            ( LitInt 2 ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            )
                            ( Elim
                                ( App
                                    ( App
                                        ( ElimX
                                            ( "Prelude" :|
                                                [ "LLVM"
                                                , "Int"
                                                , "+"
                                                ]
                                            )
                                        )
                                        ( Elim
                                            ( App
                                                ( App
                                                    ( ElimX
                                                        ( "Prelude" :|
                                                            [ "LLVM"
                                                            , "Int"
                                                            , "*"
                                                            ]
                                                        )
                                                    )
                                                    ( Elim
                                                        ( ElimX
                                                            ( "y" :| [] )
                                                        ) ()
                                                    ) ()
                                                )
                                                ( Prim
                                                    ( LitInt 2 ) ()
                                                ) ()
                                            ) ()
                                        ) ()
                                    )
                                    ( Elim
                                        ( App
                                            ( App
                                                ( ElimX
                                                    ( "Prelude" :|
                                                        [ "LLVM"
                                                        , "Int"
                                                        , "+"
                                                        ]
                                                    )
                                                )
                                                ( Elim
                                                    ( App
                                                        ( App
                                                            ( ElimX
                                                                ( "Prelude" :|
                                                                    [ "LLVM"
                                                                    , "Int"
                                                                    , "*"
                                                                    ]
                                                                )
                                                            )
                                                            ( Elim
                                                                ( ElimX
                                                                    ( "z" :| [] )
                                                                ) ()
                                                            ) ()
                                                        )
                                                        ( Prim
                                                            ( LitInt 2 ) ()
                                                        ) ()
                                                    ) ()
                                                ) ()
                                            )
                                            ( Prim
                                                ( LitInt 5 ) ()
                                            ) ()
                                        ) ()
                                    ) ()
                                ) ()
                            ) ()
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "-"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "-"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Sub ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :| [ "const" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :| [ "const" ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :| [ "ty" ] )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :| [ "ty" ] )
                            ) ()
                        )
                        ( Pi SAny
                            ( Elim
                                ( ElimX
                                    ( "a" :| [] )
                                ) ()
                            )
                            ( Pi SAny
                                ( Elim
                                    ( ElimX
                                        ( "b" :| [] )
                                    ) ()
                                )
                                ( Elim
                                    ( ElimX
                                        ( "a" :| [] )
                                    ) ()
                                )
                                ( "" :| [] )
                            )
                            ( "" :| [] )
                        )
                        ( "b" :| [] )
                    )
                    ( "a" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats =
                        [ PatternX
                            ( "_" :| [] )
                        , PatternX
                            ( "_" :| [] )
                        , PatternX
                            ( "x" :| [] )
                        ]
                    , rawClauseBody = Lam
                        ( Elim
                            ( ElimX
                                ( "x" :| [] )
                            ) ()
                        )
                        ( "_" :| [] )
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :| [ "ty" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :| [ "ty" ]
                , rawFunUsage = GSAny
                , rawFunType = Star
                    ( U'
                        ( CU 1 )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Star
                        ( U'
                            ( CU 0 )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "int"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "int"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Elim
                    ( ElimX
                        ( "Prelude" :| [ "ty" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int8"
                                ]
                            )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "mul"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "mul"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Mul ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "sub"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "sub"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Sub ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :| [ "id" ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :| [ "id" ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :| [ "ty" ] )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "a" :| [] )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "a" :| [] )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "a" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats =
                        [ PatternX
                            ( "_" :| [] )
                        , PatternX
                            ( "x" :| [] )
                        ]
                    , rawClauseBody = Elim
                        ( ElimX
                            ( "x" :| [] )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "Int"
            , "+"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "Int"
                    , "+"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Pi SAny
                    ( Elim
                        ( ElimX
                            ( "Prelude" :|
                                [ "LLVM"
                                , "int"
                                ]
                            )
                        ) ()
                    )
                    ( Pi SAny
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( Elim
                            ( ElimX
                                ( "Prelude" :|
                                    [ "LLVM"
                                    , "int"
                                    ]
                                )
                            ) ()
                        )
                        ( "" :| [] )
                    )
                    ( "" :| [] )
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = Prim Add ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ,
        ( "Prelude" :|
            [ "LLVM"
            , "string"
            ]
        , RawGFunction
            ( RawFunction
                { rawFunName = "Prelude" :|
                    [ "LLVM"
                    , "string"
                    ]
                , rawFunUsage = GSAny
                , rawFunType = Elim
                    ( ElimX
                        ( "Prelude" :| [ "ty" ] )
                    ) ()
                , rawFunClauses = RawFunClause
                    { rawClauseTel = []
                    , rawClausePats = []
                    , rawClauseBody = PrimTy
                        ( PrimTy
                            ( PointerType
                                { pointerReferent = IntegerType
                                    { typeBits = 8 }
                                , pointerAddrSpace = AddrSpace 0
                                }
                            )
                        ) ()
                    , rawClauseCatchall = False
                    } :| []
                }
            )
        )
    ]