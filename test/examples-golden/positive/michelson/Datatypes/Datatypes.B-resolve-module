ShowMod
    { contents = T
        { public = fromList
            [
                ( "+"
                , Info
                    { infoTable = fromList
                        [
                            ( "precedence", ( ":pred" ":left" 5 ) )
                        ,
                            ( "type"
                            ,
                                ( ":infix" "TopLevel.Prelude.->" "TopLevel.Michelson.Prelude.nat"
                                    ( ":infix" "TopLevel.Prelude.->" "TopLevel.Michelson.Prelude.nat" "TopLevel.Michelson.Prelude.nat" ) ) ) ]
                    , infoDef = Term
                        ( ":lambda-case"
                            ( () ( ":primitive" "Michelson.add" ) ) ) } )
            ,
                ( "main"
                , Info
                    { infoTable = fromList
                        [
                            ( "type"
                            ,
                                ( ":infix" "TopLevel.Prelude.->"
                                    ( "TopLevel.Michelson.Prelude.pair" "TopLevel.Michelson.Prelude.nat" "TopLevel.Michelson.Prelude.nat" )
                                    ( "TopLevel.Michelson.Prelude.pair"
                                        ( ":paren"
                                            ( "TopLevel.Michelson.Prelude.list" "TopLevel.Michelson.Prelude.operation" ) ) "TopLevel.Michelson.Prelude.nat" ) ) ) ]
                    , infoDef = Term
                        ( ":lambda-case"
                            ( ()
                                ( ":lambda" ( "_" )
                                    ( "make-pair" "nil" 0 ) ) ) ) } )
            ,
                ( "nil"
                , Info
                    { infoTable = fromList
                        [
                            ( "type"
                            ,
                                ( "TopLevel.Michelson.Prelude.list" "TopLevel.Michelson.Prelude.operation" ) ) ]
                    , infoDef = Term
                        ( ":lambda-case"
                            ( () ( ":primitive" "Michelson.nil" ) ) ) } )
            ,
                ( "make-pair"
                , Info
                    { infoTable = fromList
                        [
                            ( "type"
                            ,
                                ( ":infix" "TopLevel.Prelude.->"
                                    ( "TopLevel.Michelson.Prelude.list" "TopLevel.Michelson.Prelude.operation" )
                                    ( ":infix" "TopLevel.Prelude.->" "TopLevel.Michelson.Prelude.nat"
                                        ( "TopLevel.Michelson.Prelude.pair"
                                            ( ":paren"
                                                ( "TopLevel.Michelson.Prelude.list" "TopLevel.Michelson.Prelude.operation" ) ) "TopLevel.Michelson.Prelude.nat" ) ) ) ) ]
                    , infoDef = Term
                        ( ":lambda-case"
                            ( () ( ":primitive" "Michelson.pair" ) ) ) } ) ]
        , private = fromList [] }
    , openList = []
    , qualifiedMap = fromList
        [
            ( "signature"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-coproduct-elim"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "unit-t"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( ":"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "ty_"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "cat-coproduct-intro-right"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "cat-cons"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "set"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "if2"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "operation"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "size"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "SAny"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "set-delegate"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "sender"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "lsl"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-product-elim-left"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "balance"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "address"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "add"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "sha512"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "self"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-atom"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "key"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-keyword"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "contract"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "id"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "chain-id"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "or"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cdr"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "car"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "if-none"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "sha256"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "div"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "nat"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "transfer-tokens"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "dpair"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "timestamp"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-coproduct-intro-left"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "sub"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "mul"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "amount"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-coproduct"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "address-to-contract"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "list"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "fail-with"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "ty"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "xor"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "string"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "abs"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "key-hash"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "hash-key"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "->"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "now"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "arr"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "map-ty"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "concat"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "compare"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "pair"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "source"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "big-map"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-product-elim-right"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "lsr"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "const"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "slice"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-product"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "categorial-type"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "Interpreter"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "mutez"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cat-product-intro"
            , SymInfo
                { used = NotUsed, mod = "TopLevel" :| [ "Prelude" ] } )
        ,
            ( "option"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "int"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "unit"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "bool"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "and%"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "cons"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "bytes"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } )
        ,
            ( "blake2b"
            , SymInfo
                { used = NotUsed
                , mod = "TopLevel" :|
                    [ "Michelson", "Prelude" ] } ) ] }