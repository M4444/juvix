mod HigherOrder where

open Prelude
open Michelson.Prelude

sig higher-order : (nat -> nat) -> nat
let higher-order f = f 10

sig g : nat -> nat
let g _ = 20

sig nil : list operation
let nil = %Michelson.nil

sig make-pair : list operation -> nat -> pair (list operation) nat
let make-pair = %Michelson.pair

sig main : pair nat nat -> pair (list operation) nat
let main =
  \_ -> make-pair nil (higher-order g)