-- TODO: Include proofs of constant supply, ownership, fungibility
mod SimpleFungibleToken where

open Prelude
open LLVM

sig address : ty
let address = string

sig key : ty 
let key = string

type Tx {
    code : vec int,
    data : Maybe (vec int),
    timestamp : int
}

type MultiSignedTxData = {
    tx : Tx,
    signature : signature,
    signers  : set address
}

sig pk-key : address -> key
let pk-key = extern "pk_key"

sig storage-read : key -> key
let storage-read = extern "storage_read"

sig read-pk : address -> key
let read-pk addr = 
    let k = pk-key addr
    in storage-read key

-- Multi-signature account which requires `k` of `n` signers to accept a transaction
sig vp : address -> MultiSignedTxData -> bool
let vp owner signed = 
    let pks = map read-pk signed.signers in
    extern(verify_tx_multi_sig)(pks, signed.tx, signed.signature)

